/**
 * @fileoverview gRPC-Web generated client stub for server
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.21.9
// source: tctxto.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as tctxto_pb from './tctxto_pb'; // proto import: "tctxto.proto"


export class TicTacToeClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateLobby = new grpcWeb.MethodDescriptor(
    '/server.TicTacToe/CreateLobby',
    grpcWeb.MethodType.UNARY,
    tctxto_pb.CreateLobbyRequest,
    tctxto_pb.CreateLobbyReply,
    (request: tctxto_pb.CreateLobbyRequest) => {
      return request.serializeBinary();
    },
    tctxto_pb.CreateLobbyReply.deserializeBinary
  );

  createLobby(
    request: tctxto_pb.CreateLobbyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<tctxto_pb.CreateLobbyReply>;

  createLobby(
    request: tctxto_pb.CreateLobbyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: tctxto_pb.CreateLobbyReply) => void): grpcWeb.ClientReadableStream<tctxto_pb.CreateLobbyReply>;

  createLobby(
    request: tctxto_pb.CreateLobbyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: tctxto_pb.CreateLobbyReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/server.TicTacToe/CreateLobby',
        request,
        metadata || {},
        this.methodDescriptorCreateLobby,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/server.TicTacToe/CreateLobby',
    request,
    metadata || {},
    this.methodDescriptorCreateLobby);
  }

  methodDescriptorJoinLobby = new grpcWeb.MethodDescriptor(
    '/server.TicTacToe/JoinLobby',
    grpcWeb.MethodType.UNARY,
    tctxto_pb.JoinLobbyRequest,
    tctxto_pb.JoinLobbyReply,
    (request: tctxto_pb.JoinLobbyRequest) => {
      return request.serializeBinary();
    },
    tctxto_pb.JoinLobbyReply.deserializeBinary
  );

  joinLobby(
    request: tctxto_pb.JoinLobbyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<tctxto_pb.JoinLobbyReply>;

  joinLobby(
    request: tctxto_pb.JoinLobbyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: tctxto_pb.JoinLobbyReply) => void): grpcWeb.ClientReadableStream<tctxto_pb.JoinLobbyReply>;

  joinLobby(
    request: tctxto_pb.JoinLobbyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: tctxto_pb.JoinLobbyReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/server.TicTacToe/JoinLobby',
        request,
        metadata || {},
        this.methodDescriptorJoinLobby,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/server.TicTacToe/JoinLobby',
    request,
    metadata || {},
    this.methodDescriptorJoinLobby);
  }

  methodDescriptorCreateGame = new grpcWeb.MethodDescriptor(
    '/server.TicTacToe/CreateGame',
    grpcWeb.MethodType.UNARY,
    tctxto_pb.CreateGameRequest,
    tctxto_pb.Empty,
    (request: tctxto_pb.CreateGameRequest) => {
      return request.serializeBinary();
    },
    tctxto_pb.Empty.deserializeBinary
  );

  createGame(
    request: tctxto_pb.CreateGameRequest,
    metadata?: grpcWeb.Metadata | null): Promise<tctxto_pb.Empty>;

  createGame(
    request: tctxto_pb.CreateGameRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: tctxto_pb.Empty) => void): grpcWeb.ClientReadableStream<tctxto_pb.Empty>;

  createGame(
    request: tctxto_pb.CreateGameRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: tctxto_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/server.TicTacToe/CreateGame',
        request,
        metadata || {},
        this.methodDescriptorCreateGame,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/server.TicTacToe/CreateGame',
    request,
    metadata || {},
    this.methodDescriptorCreateGame);
  }

  methodDescriptorMakeMoke = new grpcWeb.MethodDescriptor(
    '/server.TicTacToe/MakeMoke',
    grpcWeb.MethodType.UNARY,
    tctxto_pb.MoveRequest,
    tctxto_pb.Empty,
    (request: tctxto_pb.MoveRequest) => {
      return request.serializeBinary();
    },
    tctxto_pb.Empty.deserializeBinary
  );

  makeMoke(
    request: tctxto_pb.MoveRequest,
    metadata?: grpcWeb.Metadata | null): Promise<tctxto_pb.Empty>;

  makeMoke(
    request: tctxto_pb.MoveRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: tctxto_pb.Empty) => void): grpcWeb.ClientReadableStream<tctxto_pb.Empty>;

  makeMoke(
    request: tctxto_pb.MoveRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: tctxto_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/server.TicTacToe/MakeMoke',
        request,
        metadata || {},
        this.methodDescriptorMakeMoke,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/server.TicTacToe/MakeMoke',
    request,
    metadata || {},
    this.methodDescriptorMakeMoke);
  }

  methodDescriptorSubscribeGameUpdates = new grpcWeb.MethodDescriptor(
    '/server.TicTacToe/SubscribeGameUpdates',
    grpcWeb.MethodType.SERVER_STREAMING,
    tctxto_pb.GameUpdateSubscription,
    tctxto_pb.GameUpdate,
    (request: tctxto_pb.GameUpdateSubscription) => {
      return request.serializeBinary();
    },
    tctxto_pb.GameUpdate.deserializeBinary
  );

  subscribeGameUpdates(
    request: tctxto_pb.GameUpdateSubscription,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<tctxto_pb.GameUpdate> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/server.TicTacToe/SubscribeGameUpdates',
      request,
      metadata || {},
      this.methodDescriptorSubscribeGameUpdates);
  }

  methodDescriptorSubscribeToGameCreation = new grpcWeb.MethodDescriptor(
    '/server.TicTacToe/SubscribeToGameCreation',
    grpcWeb.MethodType.SERVER_STREAMING,
    tctxto_pb.LobbySubscription,
    tctxto_pb.GameCreatedUpdate,
    (request: tctxto_pb.LobbySubscription) => {
      return request.serializeBinary();
    },
    tctxto_pb.GameCreatedUpdate.deserializeBinary
  );

  subscribeToGameCreation(
    request: tctxto_pb.LobbySubscription,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<tctxto_pb.GameCreatedUpdate> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/server.TicTacToe/SubscribeToGameCreation',
      request,
      metadata || {},
      this.methodDescriptorSubscribeToGameCreation);
  }

}

